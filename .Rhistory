matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd2$v[,1]
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2[,1:2]
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- svd1$u[,1] %*% t(svd1$v[,1]*svd1$d[1])
a1 <- svd1$u[,1] %*% t(svd1$v[,1])*svd1$d[1]
myImage(a1)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a5 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subjec==1)
sub1 <- subset(ssd, subject==1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(x[,1:3])
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.mx(svd1$v[,2])
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,c(10:12, maxCon)])
hclustering <- hclust(mdist)
myplclus(hclustering, unclass(sub1$activity))
myplclust(hclustering, unclass(sub1$activity))
myplclust(hclustering, lab.col=unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562,563)], centers=6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)], centers=6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which.with(kClust$size==29)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch=19, ylab = "Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12], pch=19, ylab = "Walkdown Cluster")
require(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnmaes, "|", fixed=TRUE)
cnames <- strsplit(cnaMes, "|", fixed=TRUE)
cnames <- strsplit(cnaMes, "|", fixed=TRUE)
cnames <- strsplit(cnames, "|", fixed=TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
play()
wcol
cnames
next()
nxt()
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0, x1)
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative <- x1<0
sum(negative, na.rm=TRUE)
mean(negative, na.rm=TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), %Y%m%d)
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code == 36 & County.site %in% both)
play*(0)
play()
head(pm0)
nxt()
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(cnt0, cnt0$county.site)
sapply(split(cnt0, cnt0$county.site))
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow=c(1,2), mar=c(4,4,2,1))
plot(dates0,x0sub, pch=20)
abline(h=median(x0sub, na.rm = TRUE), lwd = 2, )
plot(dates1,x1sub, pch=20)
abline(h=median(x1sub, na.rm = TRUE), lwd = 2, )
rng <- rang(x0sub, x1sub, na.rm=TRUE)
rng <- rangE(x0sub, x1sub, na.rm=TRUE)
rng <- range(x0sub, x1sub, na.rm=TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(names(mn0), mean(mn0))
d0 <- data.frame(names(mn0), mean = mn0
)
d0 <- data.frame(state = names(mn0), mean - mn0)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0, d1, by = "state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2], xlim=x(.5,2.5)))
with(mrg, plot(rep(1,52), mrg[,2], xlim=c(.5,2.5)))
with(mrg, plot(rep(2,52), mrg[,3])
)
with(mrg, plot(rep(2,52), mrg[,3]))
with(mrg, plot(rep(1,52), mrg[,2], xlim=c(.5,2.5)))
with(mrg, points(rep(2,52), mrg[,3]))
segments(rep(1,52), mrg[,2], rep(2,52), mrg[,3])
mrg[mrg$mean.x < mrg$mean.y,]
require(airquality)
library(airquality)
data("airquality")
library(foreign)
library(ggplot2)
library(foreign)
setwd(~/..)
setwd("~/..")
setwd("C:/Users/user/Dropbox/1. SamPaulMartina/Tanzania/data/dsm")
data1 <- read.dta("dsmcoastlindi_cescalante.dta")
setwd("~/")
data2 <- read.csv2("coast with changes.csv", header = TRUE)
data2 <- read.csv2("coast with changes.csv", header = TRUE, sep = ",")
data1coast <- subset(data1, data1$regionid = "CR")
data1coast <- subset(data1, data1$regionid == "CR")
rm(data1)
data1coast$ident <- paste(data1coast$n, data1coast$contractclean, sep = "/")
data2$ident <- paste(data2t$n, data2$contractclean, sep = "/")
data2$ident <- paste(data2$n, data2$contractclean, sep = "/")
data1coast$ident <- paste(data1coast$contractclean, data1coast$company, sep = "/")
data2$ident <- paste(data2$contractclean, data2$company, sep = "/")
intersect(data1coast$ident, data2$ident)
setwd("~/..")
setwd("C:/Users/user/Dropbox/0. Tanzania")
library(foreign)
mydata <- read.csv('Ely_dataentry.csv', row.names = FALSE, col.names = TRUE)
mydata <- read.csv('Ely_dataentry.csv', row.names = FALSE, col.names = FALSE)
mydata <- read.csv('Ely_dataentry.csv')
names(mydata)
head(mydata 5)
head(mydata, 5)
class(mydata$estimatedcost)
mydata$estimatedcost <- as.numeric(mydata$estimatedcost)
class(mydata$estimatedcost)
head(mydata$estimatedcost)
View(mydata)
mydata <- read.csv('Ely_dataentry.csv')
names(mydata)
head(mydata, 5)
class(mydata$estimatedcost)
names(mydata)
class(mydata[,61:64])
class(names(mydata))
class(mydata$(names))
class(mydata$[names])
class(mydata$award)
head(mydata$award)
mydata$award <- as.numeric(mydata$award)
head(mydata$award)
rm(mydata)
## Load data
mydata <- read.csv('Ely_dataentry.csv')
## Check the data
names(mydata)
head(mydata, 5)
class(mydata$estimatedcost)
class(mydata$award)
head(mydata$award,5)
rm(mydata)
ceciliadata <- read.dta("C:\Users\user\Dropbox\1. SamPaulMartina\Tanzania\data\EvaluationReportsRecords_12Sep2016.dta")
getwd()
setwd("C:/Users/user/Dropbox")
library(foreign)
elydata <- read.csv("0. Tanzania/Ely_dataentry.csv")
ceciliadata <- read.dta("1. SamPaulMartina/Tanzania/data/EvaluationReportsRecords_12Sep2016.dta")
names(elydata)
names(ceciliadata)
intersect(names(elydata), names(ceciliadata))
interserct.names <- intersect(names(elydata), names(ceciliadata))
intersect.names <- intersect(names(elydata), names(ceciliadata))
intersect.names
lenght(intersect.names)
length(intersect.names)
93-71
library(maptools)
library(foreign)
> myinfo <- read.csv("1.TANZANIA/Mapas/RoadsIdentified_AllVars.csv")
> info.truck <- myinfo[grep("T", myinfo$road.label1, ignore.case = TRUE),]
> head(info.truck)
> info.regional <- myinfo[grep("R", myinfo$road.label1, ignore.case = TRUE),]
> tail(info.regional)
> regional <- readShapeLines("1.TANZANIA/Mapas/RoadMaps/Regional Roads/ALL REGIONAL ROADS MAY 2016.Shp")
> trunk <- readShapeLines("1.TANZANIA/Mapas/RoadMaps/Trunk Roads/ALL TRUNK ROADS MAY 2016.Shp")
> regdbf <- read.dbf("1.TANZANIA/Mapas/RoadMaps/Regional Roads/ALL REGIONAL ROADS MAY 2016.Dbf")
> trunkdbf <- read.dbf("1.TANZANIA/Mapas/RoadMaps/Regional Roads/ALL REGIONAL ROADS MAY 2016.Dbf")
> names(regdbf)
rm(list=ls())
library(maptools)
library(foreign)
> myinfo <- read.csv("1.TANZANIA/Mapas/RoadsIdentified_AllVars.csv")
myinfo <- read.csv("1.TANZANIA/Mapas/RoadsIdentified_AllVars.csv")
getwd()
setwd("~/..")
setwd("~/")
myinfo <- read.csv("~/1.TANZANIA/Mapas/RoadsIdentified_AllVars.csv")
info.truck <- myinfo[grep("T", myinfo$road.label1, ignore.case = TRUE),]
rm(list=ls())
library(rmarkdown)
load("~/2.EDUCATION/DataScience/ReproducibleResearch/.RData")
setwd("~/2.EDUCATION/DataScience/ReproducibleResearch/RepData_PeerAssessment1")
knitr::opts_chunk$set(echo = TRUE)
unzip("activity.zip")
library(foreign)
act.data <- read.csv("activity.csv")
names(act.data)
head(act.data)
library(dplyr)
av.step.daily <- act.data %<% group_by(date) %<% mean(steps, na.rm = TRUE)
av.step.daily <- act.data %>% group_by(date) %>% mean(steps, na.rm = TRUE)
class(act.data$date)
av.step.daily <- act.data %>% group_by(date) %>% sumarise(mean(steps, na.rm = TRUE))
av.step.daily <- act.data %>% group_by(date) %>% sumarise(steps=mean(steps, na.rm = TRUE))
av.step.daily <- act.data %>% group_by(date) %>% mean(steps, na.rm = TRUE)
mean(act.data$steps, na.rm = TRUE)
class(act.data$steps)
mean(act.data$steps, na.rm = TRUE)
grouped <- group_by(act.data$date)
levels(act.data$date)
act.data$date <- as.Date(act.data$date)
grouped <- group_by(act.data$date)
grouped <- group_by(act.data, date)
rm(grouped)
av.step.daily <- act.data %>% group_by(date)
av.step.daily <- act.data %>% group_by(date) %>% summarise(mean(steps, na.rm = TRUE))
av.step.daily
View(act.data)
day.steps <- act.data %>% group_by(date) %>% summarise(sum(steps, na.rm = TRUE))
day.steps
mean(day.steps, na.rm = TRUE)
mean(day.steps$`sum(steps, na.rm = TRUE)`, na.rm = TRUE)
day.steps <- act.data %>% group_by(date) %>% summarise(sum(steps, na.rm = TRUE)) %>% mean(steps, na.rm = TRUE)
day.steps
day.steps <- act.data %>% group_by(date) %>% summarise(mean(sum(steps, na.rm = TRUE)))
day.steps
day.steps <- act.data %>% group_by(date) %>% mean(summarise(sum(steps, na.rm = TRUE)))
day.steps <- act.data %>% group_by(date) %>% summarise(sum(steps, na.rm = TRUE))
mean(day.steps$`sum(steps, na.rm = TRUE)`, na.rm = TRUE)
mean.day.steps <- mean(day.steps$`sum(steps, na.rm = TRUE)`, na.rm = TRUE)
mean.day.steps
median.day.steps <- median(day.steps$`sum(steps, na.rm = TRUE)`, na.rm = TRUE)
install.packages("ggplot2")
library(ggplot2)
rm(av.step.daily)
library(ggplot2)
require(ggplot2)
day.steps$steps <- act.data %>% group_by(date) %>% summarise(sum(steps, na.rm = TRUE))
day.steps
day.steps
View(day.steps)
day.steps <- act.data %>% group_by(date) %>% summarise(sum(steps, na.rm = TRUE))
rename(day.steps, c("`sum(steps, na.rm = TRUE)`" = "steps"))
args(rename)
names(day.steps)[names(day.steps) =="`sum(steps, na.rm = TRUE)`"] <-"steps"
names(day.steps)
names(day.steps)[names(day.steps) =="`sum(steps, na.rm = TRUE)`"] <-"steps"
names(day.steps)[2] <- "steps"
names(day.steps)
rm(list=ls())
setwd("~/2.EDUCATION/DataScience/ReproducibleResearch/RepData_PeerAssessment1")
unzip("activity.zip")
library(foreign)
act.data <- read.csv("activity.csv")
library(dplyr)
day.steps <- act.data %>% group_by(date) %>% summarise(sum(steps, na.rm = TRUE))
names(day.steps)[2] <- "steps"
mean.day.steps <- mean(day.steps$steps, na.rm = TRUE)
median.day.steps <- median(day.steps$steps, na.rm = TRUE)
The average total number of steps taken per day is `mean.day.steps` steps and the median is `median.day.steps` steps.
mean.day.steps
median.day.steps
library(ggplot2)
install.packages("scales")
library(ggplot2)
g <- ggplot(day.steps, aes(x = steps)) + geom_histogram()
g
g <- ggplot(day.steps, aes(x = steps)) + geom_histogram(binwidth = 10, colour = "black", fill = "white")
g <- g + geom_vline(aes(xintercept = mean(steps, na.rm = TRUE)), color = "red", linetype = "dashed", size = 1)
g
g <- ggplot(day.steps, aes(x = steps)) + geom_histogram(colour = "black", fill = "white")
g <- g + geom_vline(aes(xintercept = mean(steps, na.rm = TRUE)), color = "red", linetype = "dashed", size = 1)
g
g <- ggplot(day.steps, aes(x = steps)) + geom_histogram(binwidth = 50, colour = "black", fill = "white")
g <- g + geom_vline(aes(xintercept = mean(steps, na.rm = TRUE)), color = "red", linetype = "dashed", size = 1)
g
g <- ggplot(day.steps, aes(x = steps)) + geom_histogram(binwidth = 100, colour = "black", fill = "white")
g <- g + geom_vline(aes(xintercept = mean(steps, na.rm = TRUE)), color = "red", linetype = "dashed", size = 1)
g
g <- ggplot(day.steps, aes(x = steps)) + geom_histogram(colour = "black", fill = "white")
g <- g + geom_vline(aes(xintercept = mean(steps, na.rm = TRUE)), color = "red", linetype = "dashed", size = 1)
g
g <- ggplot(day.steps, aes(x = steps)) + geom_histogram()
g <- g + geom_vline(aes(xintercept = mean(steps, na.rm = TRUE)), color = "red", linetype = "dashed", size = 1)
g
g <- g + geom_vline(aes(xintercept = mean(steps, na.rm = TRUE)), color = "red", linetype = "dashed", size = 1) + geom_vline(aes(xintercept = median(steps, na.rm = TRUE)), color = "blue", linetype = "dashed", size = .5)
g
g <- g + title("Number of Steps taken by day")
g
g <- g + ggtitle("Number of Steps taken by day")
g
g <- g + ggtitle("Number of Steps Taken by Day") + theme(plot.title = element_text(lineheight=.8, face="bold")
)
g <- g + ggtitle("Number of Steps Taken by Day") + theme(plot.title = element_text(lineheight=.8, face="bold"))
g
g <- g +  scale_color_manual(name = "statistics", values = c(median = "blue", mean = "red"))
g
rm(g)
g <- ggplot(day.steps, aes(x = steps)) + geom_histogram()
g <- g + geom_vline(aes(xintercept = mean(steps, na.rm = TRUE)), color = "red", linetype = "dashed", size = 1) + geom_vline(aes(xintercept = median(steps, na.rm = TRUE)), color = "blue", linetype = "dashed", size = .5) + scale_color_manual(name = "statistics", values = c(median = "blue", mean = "red"))
g <- g + ggtitle("Number of Steps Taken by Day") + theme(plot.title = element_text(lineheight=.8, face="bold"))
g
g <- ggplot(day.steps, aes(x = steps)) + geom_histogram()
g <- g + geom_vline(aes(xintercept = mean(steps, na.rm = TRUE)), color = "red", linetype = "dashed", size = 1, show.legend = TRUE) + geom_vline(aes(xintercept = median(steps, na.rm = TRUE)), color = "blue", linetype = "dashed", size = .5, show.legend = TRUE)
g <- g + ggtitle("Number of Steps Taken by Day") + theme(plot.title = element_text(lineheight=.8, face="bold"))
G
g
g <- ggplot(day.steps, aes(x = steps)) + geom_histogram()
g <- g + geom_vline(aes(xintercept = mean(steps, na.rm = TRUE)), color = "red", linetype = "dashed", size = 1, show_guide = TRUE) + geom_vline(aes(xintercept = median(steps, na.rm = TRUE)), color = "blue", linetype = "dashed", size = .5, show_guide = TRUE)
g <- g + ggtitle("Number of Steps Taken by Day") + theme(plot.title = element_text(lineheight=.8, face="bold"))
g <- g + geom_vline(aes(xintercept = mean(steps, na.rm = TRUE)), color = "red", linetype = "dashed", size = 1, show.legend  = TRUE) + geom_vline(aes(xintercept = median(steps, na.rm = TRUE)), color = "blue", linetype = "dashed", size = .5, show.legend=TRUE)
g <- g + ggtitle("Number of Steps Taken by Day") + theme(plot.title = element_text(lineheight=.8, face="bold"))
g
g <- ggplot(day.steps, aes(x = steps)) + geom_histogram()
g <- ggplot(day.steps, aes(x = steps)) + geom_histogram()
g <- g + geom_vline(aes(xintercept = mean(steps, na.rm = TRUE)), color = "red", linetype = "dashed", size = 1, show.legend = TRUE) + geom_vline(aes(xintercept = median(steps, na.rm = TRUE)), color = "blue", linetype = "dashed", size = .5, show.legend = TRUE) + scale_color_manual(name = "statistics", values = c(median = "blue", mean = "red"))
g <- g + ggtitle("Number of Steps Taken by Day") + theme(plot.title = element_text(lineheight=.8, face="bold"))
G
g
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
interval.steps <- act.data %<% group_by(interval) %<% summarise(mean(steps, na.rm = TRUE))
interval.steps <- act.data %>% group_by(interval) %>% summarise(mean(steps, na.rm = TRUE))
head(interval.steps)
names(interval.steps)[2] <- "mean.steps"
max <- max(interval.steps$mean.steps)
max <- which(interval.steps$interval, max(interval.steps$mean.steps))
max <- which(interval.steps$interval, max(interval.steps$mean.steps, na.rm=TRUE))
max <- which.max(interval.steps$mean.steps)
max
max <- which.max(interval.steps)
max <- interval.steps[which.max(interval.steps),]
max <- interval.steps[which.max(interval.steps$mean.steps),]
max
interval.steps
View(interval.steps)
max(interval.steps$mean.steps)
max(interval.steps$interval)
q <- ggplot(interval.steps, aes(x=interval, y=steps)) + geom_line()
q
q <- ggplot(interval.steps, aes(x=interval, y=mean.steps)) + geom_line()
q
q <- ggplot(interval.steps, aes(x=interval, y=mean.steps)) + geom_line(colour= "blue")
q
q <- ggplot(interval.steps, aes(x=interval, y=mean.steps, colour = mean.steps)) + geom_line(colour= "blue")
q
q <- ggplot(interval.steps, aes(x=interval, y=mean.steps) + geom_line(colour= mean.steps)
q
q <- ggplot(interval.steps, aes(x=interval, y=mean.steps) + geom_line(colour= "mean.steps")
q
q <- ggplot(interval.steps, aes(x=interval, y=mean.steps) + geom_line(colour= blue)
q
q <- ggplot(interval.steps, aes(x=interval, y=mean.steps) + geom_line(colour= "blue")
)
q <- ggplot(interval.steps, aes(x=interval, y=mean.steps)) + geom_line(colour= mean.steps)
q <- ggplot(interval.steps, aes(x=interval, y=mean.steps)) + geom_line(colour= "blues")
1
q
q <- ggplot(interval.steps, aes(x=interval, y=mean.steps)) + geom_line(colour= "blue")
q
ismiss <- length(is.na(act.data$steps))
ismiss
ismiss <- is.na(act.data$steps)
ismiss <- count(is.na(act.data$steps))
ismiss <- sum(is.na(act.data$steps))
ismiss
xx <- subset(act.data, act.data$steps == "NA")
xx <- subset(act.data, act.data$steps == NA)
xx <- subset(act.data, is.na(act.data$steps))
rm(xx)
changetomedian <- function(x) replace(x, is.na(x), median(x, na.rm = TRUE))
act.data2 <- ddply(act.data, ~ interval, transform, steps = changetomedian(steps))
library(plyr)
changetomedian <- function(x) replace(x, is.na(x), median(x, na.rm = TRUE))
act.data2 <- ddply(act.data, ~ interval, transform, steps = changetomedian(steps))
act.data2
View(act.data2)
j <- ggplot(act.data2, aes(steps)) + geom_histogram()
j <- j + geom_vline(aes(xintercept = mean(steps, na.rm = TRUE)), color = "red", linetype = "dashed", size = 1, show.legend = TRUE) + geom_vline(aes(xintercept = median(steps, na.rm = TRUE)), color = "blue", linetype = "dashed", size = .5, show.legend = TRUE) + scale_color_manual(name = "statistics", values = c(median = "blue", mean = "red"))
j
j <- ggplot(act.data2) + geom_histogram()
j <- j + geom_vline(aes(xintercept = mean(steps, na.rm = TRUE)), color = "red", linetype = "dashed", size = 1, show.legend = TRUE) + geom_vline(aes(xintercept = median(steps, na.rm = TRUE)), color = "blue", linetype = "dashed", size = .5, show.legend = TRUE) + scale_color_manual(name = "statistics", values = c(median = "blue", mean = "red"))
j
j <- ggplot(act.data2, aes(steps)) + geom_histogram()
j <- j + geom_vline(aes(xintercept = mean(steps, na.rm = TRUE)), color = "red", linetype = "dashed", size = 1, show.legend = TRUE) + geom_vline(aes(xintercept = median(steps, na.rm = TRUE)), color = "blue", linetype = "dashed", size = .5, show.legend = TRUE) + scale_color_manual(name = "statistics", values = c(median = "blue", mean = "red"))
j
j <- ggplot(act.data2, aes(steps)) + geom_histogram(bins = 100)
j <- j + geom_vline(aes(xintercept = mean(steps, na.rm = TRUE)), color = "red", linetype = "dashed", size = 1, show.legend = TRUE) + geom_vline(aes(xintercept = median(steps, na.rm = TRUE)), color = "blue", linetype = "dashed", size = .5, show.legend = TRUE) + scale_color_manual(name = "statistics", values = c(median = "blue", mean = "red"))
j
j <- ggplot(act.data2, aes(steps)) + geom_histogram(bins = 50)
j <- j + geom_vline(aes(xintercept = mean(steps, na.rm = TRUE)), color = "red", linetype = "dashed", size = 1, show.legend = TRUE) + geom_vline(aes(xintercept = median(steps, na.rm = TRUE)), color = "blue", linetype = "dashed", size = .5, show.legend = TRUE) + scale_color_manual(name = "statistics", values = c(median = "blue", mean = "red"))
j
act.data2$wd <- weekdays(act.data2$date, abbreviate)
act.data2$wd <- weekdays(as.date(act.data2$date), abbreviate)
act.data2$date <- as.Date(act.data2$date)
act.data2$wd <- weekdays(as.date(act.data2$date), abbreviate)
act.data2$wd <- weekdays(act.data2$date, abbreviate)
act.data2$wd <- weekdays(act.data2$date)
head(act.data2)
act.data2$wd <- ifelse(weekdays(act.data2$date) %in% c("Saturday", "Sunday"), "weekend", "weekday")
wd
head(act.data2)
week.steps <- act.data2 %>% group_by(wd) %>% summarise(mean(steps, na.rm = TRUE))
week.steps
class(act.data2$wd)
act.data2$wd <- as.factor(act.data2$wd)
week.steps <- act.data2 %>% group_by(wd) %>% summarise(mean(steps, na.rm = TRUE))
class(act.data2$wd)
levels(wd)
levels(act.data2$wd)
rm(week.steps)
act.data2$date <- as.Date(act.data2$date)
act.data2$wd <- ifelse(weekdays(act.data2$date) %in% c("Saturday", "Sunday"), "weekend", "weekday")
act.data2$wd <- as.factor(act.data2$wd)
week.steps <- act.data2 %>% group_by(wd) %>% summarise(mean(steps, na.rm = TRUE))
names(week.steps)[2] <- "mean.steps"
rm(week.steps)
week.steps <- subset(act.data2$wd == "weekday")
week.steps <- subset(act.data2, wd == "weekday")
weekend.steps <- subset(act.data2, wd == "weekend")
rm(week.steps, weekend.steps)
head(act.data2)
week.steps <- act.data2 %>% subset(act.data2, wd == "weekday") %>% group_by(interval) %>% summarise(mean(steps, na.rm=TRUE))
week.steps <- act.data2 %>% subset(wd == "weekday") %>% group_by(interval) %>% summarise(mean(steps, na.rm=TRUE))
week.steps <- subset(act.data2, wd == "weekday") %>% group_by(interval) %>% summarise(mean(steps, na.rm=TRUE))
week.steps <- subset(act.data2, wd == "weekday")
week.steps <- group_by(act.data2, interval)
week.steps <- group_by(act.data2, interval) %>% summarise(mean(steps))
week.steps <- subset(act.data2, wd == "weekday")
names(week.steps)
week.steps <- week.steps %>% group_by(interval) %>% summarise(mean(steps))
week.steps <- subset(act.data2, wd == "weekday")
week.steps <- group_by(act.data2, interval)
week.steps <- summarise(mean(week.steps), by= interval)
week.steps <- subset(act.data2, wd == "weekday")
week.steps <- group_by(interval) %>% summarise(mean(steps, na.rm = TRUE))
week.steps %>% group_by(interval) %>% summarise(mean(steps, na.rm = TRUE))
week.steps %>% group_by(interval) %>% summarise(mean(steps, na.rm = TRUE))
week.steps
ws.sum <- week.steps %>% group_by(interval) %>% summarise(mean(steps, na.rm = TRUE))
class(week.steps$interval)
week.steps$interval <- as.factor(week.steps$interval)
rm(week.steps, ws.sum)
act.data2$interval <- as.factor(act.data2$interval)
week.steps <- act.data2 %>% subset(wd == "weekday") %>% group_by(interval) %>% summarise(mean(steps, na.rm = TRUE))
act.data2$interval
class(act.data2$interval)
class(act.data2$wd)
class(act.data2$steps)
class(act.data2$date)
week.steps <- subset(act.data2, wd == "weekday") %>% group_by(interval) %>% summarise(mean(steps, na.rm = TRUE))
week.steps <- subset(act.data2, wd == "weekday") %>% group_by(interval)
